declare i32 @putchar(i32)
declare i32 @getchar()
@fabio = global i32 0, align 4
@renata = global i32 0, align 4
define i32 @a() {
		%1 = load i32, i32* @renata
%2 = call i32 @putchar(i32 %1)
		%3 = call i32 @putchar(i32 10)
		%4 = load i32, i32* @fabio
%5 = call i32 @putchar(i32 %4)
		%6 = call i32 @putchar(i32 10)
			%7 = load i32, i32* @fabio
	%8 = add i32 %7, 5
	store i32 %8, i32* @fabio
		%9 = load i32, i32* @fabio
	ret i32 %9
			ret i32 5
			ret i32 97
}
define i32 @b() {
		%1 = load i32, i32* @fabio
%2 = call i32 @putchar(i32 %1)
		%3 = call i32 @putchar(i32 10)
ret i32 0
}
define void @c() {
ret void
}
define void @d(i32 %arg-a) {
%a = alloca i32, align 4
store i32 %arg-a, i32* %a
		ret void 
		ret void 
		ret void 
		ret void 
}
define i32 @e(i32 %arg-a) {
%a = alloca i32, align 4
store i32 %arg-a, i32* %a
		%1 = load i32, i32* %a
%2 = call i32 @putchar(i32 %1)
		%3 = call i32 @putchar(i32 10)
			%4 = load i32, i32* %a
	%5 = add i32 %4, 5
	store i32 %5, i32* %a
		%6 = load i32, i32* %a
%7 = call i32 @putchar(i32 %6)
		%8 = call i32 @putchar(i32 10)
		%9 = load i32, i32* %a
	ret i32 %9
}
define double @f(i32 %arg-a) {
%a = alloca i32, align 4
store i32 %arg-a, i32* %a
ret double 0.0
}
define i32 @main() {
store i32 80, i32* @fabio
%1 = load i32, i32* @fabio
%2 = add i32 %1, 2
store i32 %2, i32* @renata
	%var = alloca i32, align 4
	%d_var = alloca double, align 8
		%3 = call i32 @a()
	store i32 %3, i32* %var
		%4 = call i32 @b()
	store i32 %4, i32* %var
		call void @d(i32 1)
	call void @c()
			%5 = call i32 @e(i32 100)
	%6 = sitofp i32 %5 to double
	store double %6, double* %d_var
			%7 = call double @f(i32 2)
	store double %7, double* %d_var
	%8 = call i32 @a()
	%9 = call i32 @b()
	call void @c()
		call void @d(i32 97)
			%10 = call i32 @e(i32 100)
	store i32 %10, i32* %var
		%11 = load i32, i32* %var
%12 = call i32 @putchar(i32 %11)
		%13 = call double @f(i32 97)
ret i32 0
}

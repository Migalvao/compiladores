Grammar

    0 $accept: program $end

    1 program: functionsAndDeclarations

    2 functionsAndDeclarations: functionDefinition
    3                         | functionDeclaration
    4                         | declaration
    5                         | functionsAndDeclarations functionDefinition
    6                         | functionsAndDeclarations functionDeclaration
    7                         | functionsAndDeclarations declaration

    8 functionDefinition: typeSpec functionDeclarator functionBody

    9 functionDeclaration: typeSpec functionDeclarator SEMI

   10 typeSpec: CHAR
   11         | INT
   12         | VOID
   13         | SHORT
   14         | DOUBLE

   15 functionDeclarator: id_token LPAR parameterList RPAR

   16 parameterList: parameterDeclaration
   17              | parameterList COMMA parameterDeclaration

   18 parameterDeclaration: typeSpec
   19                     | typeSpec id_token

   20 functionBody: LBRACE RBRACE
   21             | LBRACE declarationsAndStatements RBRACE

   22 declarationsAndStatements: statement
   23                          | declaration
   24                          | declarationsAndStatements statement
   25                          | declarationsAndStatements declaration

   26 declaration: typeSpec declaratorsList SEMI

   27 declaratorsList: declarator
   28                | declaratorsList COMMA declarator
   29                | %empty

   30 declarator: id_token
   31           | id_token ASSIGN expr

   32 id_token: ID

   33 statementList: statement
   34              | statementList statement

   35 statement: LBRACE statementList statement RBRACE
   36          | LBRACE statement RBRACE
   37          | LBRACE RBRACE
   38          | IF LPAR expr RPAR statement ELSE statement
   39          | IF LPAR expr RPAR statement
   40          | WHILE LPAR expr RPAR statement
   41          | RETURN expr SEMI
   42          | RETURN SEMI
   43          | expr SEMI
   44          | SEMI

   45 expr: expr ASSIGN expr
   46     | expr COMMA expr
   47     | expr PLUS expr
   48     | expr MINUS expr
   49     | expr MUL expr
   50     | expr DIV expr
   51     | expr MOD expr
   52     | expr OR expr
   53     | expr AND expr
   54     | expr BITWISEAND expr
   55     | expr BITWISEOR expr
   56     | expr BITWISEXOR expr
   57     | expr EQ expr
   58     | expr NE expr
   59     | expr LE expr
   60     | expr GE expr
   61     | expr LT expr
   62     | expr GT expr
   63     | PLUS expr
   64     | MINUS expr
   65     | NOT expr
   66     | id_token LPAR RPAR
   67     | id_token LPAR expr RPAR
   68     | id_token LPAR expr COMMA expr RPAR
   69     | id_token
   70     | INTLIT
   71     | CHRLIT
   72     | REALLIT
   73     | LPAR expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <terminal> (258) 10
    IF <terminal> (259) 38 39
    ELSE <terminal> (260) 38
    WHILE <terminal> (261) 40
    INT <terminal> (262) 11
    SHORT <terminal> (263) 13
    DOUBLE <terminal> (264) 14
    RETURN <terminal> (265) 41 42
    VOID <terminal> (266) 12
    BITWISEAND <terminal> (267) 54
    BITWISEOR <terminal> (268) 55
    BITWISEXOR <terminal> (269) 56
    AND <terminal> (270) 53
    ASSIGN <terminal> (271) 31 45
    MUL <terminal> (272) 49
    COMMA <terminal> (273) 17 28 46 68
    DIV <terminal> (274) 50
    EQ <terminal> (275) 57
    GE <terminal> (276) 60
    GT <terminal> (277) 62
    LBRACE <terminal> (278) 20 21 35 36 37
    LE <terminal> (279) 59
    LPAR <terminal> (280) 15 38 39 40 66 67 68 73
    LT <terminal> (281) 61
    MINUS <terminal> (282) 48 64
    MOD <terminal> (283) 51
    NE <terminal> (284) 58
    NOT <terminal> (285) 65
    OR <terminal> (286) 52
    PLUS <terminal> (287) 47 63
    RBRACE <terminal> (288) 20 21 35 36 37
    RPAR <terminal> (289) 15 38 39 40 66 67 68 73
    SEMI <terminal> (290) 9 26 41 42 43 44
    INTLIT <terminal> (291) 70
    ID <idTerminal> (292) 32
    CHRLIT <terminal> (293) 71
    REALLIT <terminal> (294) 72


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <nonterminal> (41)
        on left: 1
        on right: 0
    functionsAndDeclarations <nonterminal> (42)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    functionDefinition <nonterminal> (43)
        on left: 8
        on right: 2 5
    functionDeclaration <nonterminal> (44)
        on left: 9
        on right: 3 6
    typeSpec <nonterminal> (45)
        on left: 10 11 12 13 14
        on right: 8 9 18 19 26
    functionDeclarator <nonterminal> (46)
        on left: 15
        on right: 8 9
    parameterList <nonterminal> (47)
        on left: 16 17
        on right: 15 17
    parameterDeclaration <nonterminal> (48)
        on left: 18 19
        on right: 16 17
    functionBody <nonterminal> (49)
        on left: 20 21
        on right: 8
    declarationsAndStatements <nonterminal> (50)
        on left: 22 23 24 25
        on right: 21 24 25
    declaration <nonterminal> (51)
        on left: 26
        on right: 4 7 23 25
    declaratorsList <nonterminal> (52)
        on left: 27 28 29
        on right: 26 28
    declarator <nonterminal> (53)
        on left: 30 31
        on right: 27 28
    id_token <nonterminal> (54)
        on left: 32
        on right: 15 19 30 31 66 67 68 69
    statementList <nonterminal> (55)
        on left: 33 34
        on right: 34 35
    statement <nonterminal> (56)
        on left: 35 36 37 38 39 40 41 42 43 44
        on right: 22 24 33 34 35 36 38 39 40
    expr <nonterminal> (57)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 31 38 39 40 41 43 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 67 68 73


State 0

    0 $accept: . program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    program                   go to state 6
    functionsAndDeclarations  go to state 7
    functionDefinition        go to state 8
    functionDeclaration       go to state 9
    typeSpec                  go to state 10
    declaration               go to state 11


State 1

   10 typeSpec: CHAR .

    $default  reduce using rule 10 (typeSpec)


State 2

   11 typeSpec: INT .

    $default  reduce using rule 11 (typeSpec)


State 3

   13 typeSpec: SHORT .

    $default  reduce using rule 13 (typeSpec)


State 4

   14 typeSpec: DOUBLE .

    $default  reduce using rule 14 (typeSpec)


State 5

   12 typeSpec: VOID .

    $default  reduce using rule 12 (typeSpec)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 12


State 7

    1 program: functionsAndDeclarations .
    5 functionsAndDeclarations: functionsAndDeclarations . functionDefinition
    6                         | functionsAndDeclarations . functionDeclaration
    7                         | functionsAndDeclarations . declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (program)

    functionDefinition   go to state 13
    functionDeclaration  go to state 14
    typeSpec             go to state 10
    declaration          go to state 15


State 8

    2 functionsAndDeclarations: functionDefinition .

    $default  reduce using rule 2 (functionsAndDeclarations)


State 9

    3 functionsAndDeclarations: functionDeclaration .

    $default  reduce using rule 3 (functionsAndDeclarations)


State 10

    8 functionDefinition: typeSpec . functionDeclarator functionBody
    9 functionDeclaration: typeSpec . functionDeclarator SEMI
   26 declaration: typeSpec . declaratorsList SEMI

    ID  shift, and go to state 16

    $default  reduce using rule 29 (declaratorsList)

    functionDeclarator  go to state 17
    declaratorsList     go to state 18
    declarator          go to state 19
    id_token            go to state 20


State 11

    4 functionsAndDeclarations: declaration .

    $default  reduce using rule 4 (functionsAndDeclarations)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    5 functionsAndDeclarations: functionsAndDeclarations functionDefinition .

    $default  reduce using rule 5 (functionsAndDeclarations)


State 14

    6 functionsAndDeclarations: functionsAndDeclarations functionDeclaration .

    $default  reduce using rule 6 (functionsAndDeclarations)


State 15

    7 functionsAndDeclarations: functionsAndDeclarations declaration .

    $default  reduce using rule 7 (functionsAndDeclarations)


State 16

   32 id_token: ID .

    $default  reduce using rule 32 (id_token)


State 17

    8 functionDefinition: typeSpec functionDeclarator . functionBody
    9 functionDeclaration: typeSpec functionDeclarator . SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    functionBody  go to state 23


State 18

   26 declaration: typeSpec declaratorsList . SEMI
   28 declaratorsList: declaratorsList . COMMA declarator

    COMMA  shift, and go to state 24
    SEMI   shift, and go to state 25


State 19

   27 declaratorsList: declarator .

    $default  reduce using rule 27 (declaratorsList)


State 20

   15 functionDeclarator: id_token . LPAR parameterList RPAR
   30 declarator: id_token .
   31           | id_token . ASSIGN expr

    ASSIGN  shift, and go to state 26
    LPAR    shift, and go to state 27

    $default  reduce using rule 30 (declarator)


State 21

   20 functionBody: LBRACE . RBRACE
   21             | LBRACE . declarationsAndStatements RBRACE

    CHAR     shift, and go to state 1
    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 30
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    RBRACE   shift, and go to state 36
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    typeSpec                   go to state 41
    declarationsAndStatements  go to state 42
    declaration                go to state 43
    id_token                   go to state 44
    statement                  go to state 45
    expr                       go to state 46


State 22

    9 functionDeclaration: typeSpec functionDeclarator SEMI .

    $default  reduce using rule 9 (functionDeclaration)


State 23

    8 functionDefinition: typeSpec functionDeclarator functionBody .

    $default  reduce using rule 8 (functionDefinition)


State 24

   28 declaratorsList: declaratorsList COMMA . declarator

    ID  shift, and go to state 16

    declarator  go to state 47
    id_token    go to state 48


State 25

   26 declaration: typeSpec declaratorsList SEMI .

    $default  reduce using rule 26 (declaration)


State 26

   31 declarator: id_token ASSIGN . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 49


State 27

   15 functionDeclarator: id_token LPAR . parameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    typeSpec              go to state 50
    parameterList         go to state 51
    parameterDeclaration  go to state 52


State 28

   38 statement: IF . LPAR expr RPAR statement ELSE statement
   39          | IF . LPAR expr RPAR statement

    LPAR  shift, and go to state 53


State 29

   40 statement: WHILE . LPAR expr RPAR statement

    LPAR  shift, and go to state 54


State 30

   41 statement: RETURN . expr SEMI
   42          | RETURN . SEMI

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    SEMI     shift, and go to state 55
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 56


State 31

   35 statement: LBRACE . statementList statement RBRACE
   36          | LBRACE . statement RBRACE
   37          | LBRACE . RBRACE

    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    RETURN   shift, and go to state 30
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    RBRACE   shift, and go to state 57
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token       go to state 44
    statementList  go to state 58
    statement      go to state 59
    expr           go to state 46


State 32

   73 expr: LPAR . expr RPAR

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 60


State 33

   64 expr: MINUS . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 61


State 34

   65 expr: NOT . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 62


State 35

   63 expr: PLUS . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 63


State 36

   20 functionBody: LBRACE RBRACE .

    $default  reduce using rule 20 (functionBody)


State 37

   44 statement: SEMI .

    $default  reduce using rule 44 (statement)


State 38

   70 expr: INTLIT .

    $default  reduce using rule 70 (expr)


State 39

   71 expr: CHRLIT .

    $default  reduce using rule 71 (expr)


State 40

   72 expr: REALLIT .

    $default  reduce using rule 72 (expr)


State 41

   26 declaration: typeSpec . declaratorsList SEMI

    ID  shift, and go to state 16

    $default  reduce using rule 29 (declaratorsList)

    declaratorsList  go to state 18
    declarator       go to state 19
    id_token         go to state 48


State 42

   21 functionBody: LBRACE declarationsAndStatements . RBRACE
   24 declarationsAndStatements: declarationsAndStatements . statement
   25                          | declarationsAndStatements . declaration

    CHAR     shift, and go to state 1
    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 30
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    RBRACE   shift, and go to state 64
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    typeSpec     go to state 41
    declaration  go to state 65
    id_token     go to state 44
    statement    go to state 66
    expr         go to state 46


State 43

   23 declarationsAndStatements: declaration .

    $default  reduce using rule 23 (declarationsAndStatements)


State 44

   66 expr: id_token . LPAR RPAR
   67     | id_token . LPAR expr RPAR
   68     | id_token . LPAR expr COMMA expr RPAR
   69     | id_token .

    LPAR  shift, and go to state 67

    $default  reduce using rule 69 (expr)


State 45

   22 declarationsAndStatements: statement .

    $default  reduce using rule 22 (declarationsAndStatements)


State 46

   43 statement: expr . SEMI
   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 74
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    SEMI        shift, and go to state 86


State 47

   28 declaratorsList: declaratorsList COMMA declarator .

    $default  reduce using rule 28 (declaratorsList)


State 48

   30 declarator: id_token .
   31           | id_token . ASSIGN expr

    ASSIGN  shift, and go to state 26

    $default  reduce using rule 30 (declarator)


State 49

   31 declarator: id_token ASSIGN expr .
   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85

    $default  reduce using rule 31 (declarator)


State 50

   18 parameterDeclaration: typeSpec .
   19                     | typeSpec . id_token

    ID  shift, and go to state 16

    $default  reduce using rule 18 (parameterDeclaration)

    id_token  go to state 87


State 51

   15 functionDeclarator: id_token LPAR parameterList . RPAR
   17 parameterList: parameterList . COMMA parameterDeclaration

    COMMA  shift, and go to state 88
    RPAR   shift, and go to state 89


State 52

   16 parameterList: parameterDeclaration .

    $default  reduce using rule 16 (parameterList)


State 53

   38 statement: IF LPAR . expr RPAR statement ELSE statement
   39          | IF LPAR . expr RPAR statement

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 90


State 54

   40 statement: WHILE LPAR . expr RPAR statement

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 91


State 55

   42 statement: RETURN SEMI .

    $default  reduce using rule 42 (statement)


State 56

   41 statement: RETURN expr . SEMI
   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 74
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    SEMI        shift, and go to state 92


State 57

   37 statement: LBRACE RBRACE .

    $default  reduce using rule 37 (statement)


State 58

   34 statementList: statementList . statement
   35 statement: LBRACE statementList . statement RBRACE

    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    RETURN   shift, and go to state 30
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token   go to state 44
    statement  go to state 93
    expr       go to state 46


State 59

   33 statementList: statement .
   36 statement: LBRACE statement . RBRACE

    RBRACE  shift, and go to state 94

    $default  reduce using rule 33 (statementList)


State 60

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   73     | LPAR expr . RPAR

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 74
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    RPAR        shift, and go to state 95


State 61

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   64     | MINUS expr .

    MUL  shift, and go to state 73
    DIV  shift, and go to state 75
    MOD  shift, and go to state 82

    $default  reduce using rule 64 (expr)


State 62

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   65     | NOT expr .

    $default  reduce using rule 65 (expr)


State 63

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   63     | PLUS expr .

    MUL  shift, and go to state 73
    DIV  shift, and go to state 75
    MOD  shift, and go to state 82

    $default  reduce using rule 63 (expr)


State 64

   21 functionBody: LBRACE declarationsAndStatements RBRACE .

    $default  reduce using rule 21 (functionBody)


State 65

   25 declarationsAndStatements: declarationsAndStatements declaration .

    $default  reduce using rule 25 (declarationsAndStatements)


State 66

   24 declarationsAndStatements: declarationsAndStatements statement .

    $default  reduce using rule 24 (declarationsAndStatements)


State 67

   66 expr: id_token LPAR . RPAR
   67     | id_token LPAR . expr RPAR
   68     | id_token LPAR . expr COMMA expr RPAR

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    RPAR     shift, and go to state 96
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 97


State 68

   54 expr: expr BITWISEAND . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 98


State 69

   55 expr: expr BITWISEOR . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 99


State 70

   56 expr: expr BITWISEXOR . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 100


State 71

   53 expr: expr AND . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 101


State 72

   45 expr: expr ASSIGN . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 102


State 73

   49 expr: expr MUL . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 103


State 74

   46 expr: expr COMMA . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 104


State 75

   50 expr: expr DIV . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 105


State 76

   57 expr: expr EQ . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 106


State 77

   60 expr: expr GE . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 107


State 78

   62 expr: expr GT . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 108


State 79

   59 expr: expr LE . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 109


State 80

   61 expr: expr LT . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 110


State 81

   48 expr: expr MINUS . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 111


State 82

   51 expr: expr MOD . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 112


State 83

   58 expr: expr NE . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 113


State 84

   52 expr: expr OR . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 114


State 85

   47 expr: expr PLUS . expr

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 115


State 86

   43 statement: expr SEMI .

    $default  reduce using rule 43 (statement)


State 87

   19 parameterDeclaration: typeSpec id_token .

    $default  reduce using rule 19 (parameterDeclaration)


State 88

   17 parameterList: parameterList COMMA . parameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    typeSpec              go to state 50
    parameterDeclaration  go to state 116


State 89

   15 functionDeclarator: id_token LPAR parameterList RPAR .

    $default  reduce using rule 15 (functionDeclarator)


State 90

   38 statement: IF LPAR expr . RPAR statement ELSE statement
   39          | IF LPAR expr . RPAR statement
   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 74
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    RPAR        shift, and go to state 117


State 91

   40 statement: WHILE LPAR expr . RPAR statement
   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 74
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    RPAR        shift, and go to state 118


State 92

   41 statement: RETURN expr SEMI .

    $default  reduce using rule 41 (statement)


State 93

   34 statementList: statementList statement .
   35 statement: LBRACE statementList statement . RBRACE

    RBRACE  shift, and go to state 119

    $default  reduce using rule 34 (statementList)


State 94

   36 statement: LBRACE statement RBRACE .

    $default  reduce using rule 36 (statement)


State 95

   73 expr: LPAR expr RPAR .

    $default  reduce using rule 73 (expr)


State 96

   66 expr: id_token LPAR RPAR .

    $default  reduce using rule 66 (expr)


State 97

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   67     | id_token LPAR expr . RPAR
   68     | id_token LPAR expr . COMMA expr RPAR

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    COMMA       shift, and go to state 120
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    RPAR        shift, and go to state 121


State 98

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   54     | expr BITWISEAND expr .
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    EQ     shift, and go to state 76
    GE     shift, and go to state 77
    GT     shift, and go to state 78
    LE     shift, and go to state 79
    LT     shift, and go to state 80
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    NE     shift, and go to state 83
    PLUS   shift, and go to state 85

    $default  reduce using rule 54 (expr)


State 99

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   55     | expr BITWISEOR expr .
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEXOR  shift, and go to state 70
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    PLUS        shift, and go to state 85

    $default  reduce using rule 55 (expr)


State 100

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   56     | expr BITWISEXOR expr .
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    PLUS        shift, and go to state 85

    $default  reduce using rule 56 (expr)


State 101

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   53     | expr AND expr .
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    PLUS        shift, and go to state 85

    $default  reduce using rule 53 (expr)


State 102

   45 expr: expr . ASSIGN expr
   45     | expr ASSIGN expr .
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85

    $default  reduce using rule 45 (expr)


State 103

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   49     | expr MUL expr .
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    $default  reduce using rule 49 (expr)


State 104

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   46     | expr COMMA expr .
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85

    $default  reduce using rule 46 (expr)


State 105

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   50     | expr DIV expr .
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    $default  reduce using rule 50 (expr)


State 106

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   57     | expr EQ expr .
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    GE     shift, and go to state 77
    GT     shift, and go to state 78
    LE     shift, and go to state 79
    LT     shift, and go to state 80
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 57 (expr)


State 107

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   60     | expr GE expr .
   61     | expr . LT expr
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 60 (expr)


State 108

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   62     | expr GT expr .

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 62 (expr)


State 109

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   59     | expr LE expr .
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 59 (expr)


State 110

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   61     | expr LT expr .
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 61 (expr)


State 111

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   48     | expr MINUS expr .
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 75
    MOD  shift, and go to state 82

    $default  reduce using rule 48 (expr)


State 112

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   51     | expr MOD expr .
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    $default  reduce using rule 51 (expr)


State 113

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   58     | expr NE expr .
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL    shift, and go to state 73
    DIV    shift, and go to state 75
    GE     shift, and go to state 77
    GT     shift, and go to state 78
    LE     shift, and go to state 79
    LT     shift, and go to state 80
    MINUS  shift, and go to state 81
    MOD    shift, and go to state 82
    PLUS   shift, and go to state 85

    $default  reduce using rule 58 (expr)


State 114

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   52     | expr OR expr .
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    PLUS        shift, and go to state 85

    $default  reduce using rule 52 (expr)


State 115

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   47     | expr . PLUS expr
   47     | expr PLUS expr .
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 75
    MOD  shift, and go to state 82

    $default  reduce using rule 47 (expr)


State 116

   17 parameterList: parameterList COMMA parameterDeclaration .

    $default  reduce using rule 17 (parameterList)


State 117

   38 statement: IF LPAR expr RPAR . statement ELSE statement
   39          | IF LPAR expr RPAR . statement

    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    RETURN   shift, and go to state 30
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token   go to state 44
    statement  go to state 122
    expr       go to state 46


State 118

   40 statement: WHILE LPAR expr RPAR . statement

    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    RETURN   shift, and go to state 30
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token   go to state 44
    statement  go to state 123
    expr       go to state 46


State 119

   35 statement: LBRACE statementList statement RBRACE .

    $default  reduce using rule 35 (statement)


State 120

   46 expr: expr COMMA . expr
   68     | id_token LPAR expr COMMA . expr RPAR

    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token  go to state 44
    expr      go to state 124


State 121

   67 expr: id_token LPAR expr RPAR .

    $default  reduce using rule 67 (expr)


State 122

   38 statement: IF LPAR expr RPAR statement . ELSE statement
   39          | IF LPAR expr RPAR statement .

    ELSE  shift, and go to state 125

    $default  reduce using rule 39 (statement)


State 123

   40 statement: WHILE LPAR expr RPAR statement .

    $default  reduce using rule 40 (statement)


State 124

   45 expr: expr . ASSIGN expr
   46     | expr . COMMA expr
   46     | expr COMMA expr .
   47     | expr . PLUS expr
   48     | expr . MINUS expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | expr . MOD expr
   52     | expr . OR expr
   53     | expr . AND expr
   54     | expr . BITWISEAND expr
   55     | expr . BITWISEOR expr
   56     | expr . BITWISEXOR expr
   57     | expr . EQ expr
   58     | expr . NE expr
   59     | expr . LE expr
   60     | expr . GE expr
   61     | expr . LT expr
   62     | expr . GT expr
   68     | id_token LPAR expr COMMA expr . RPAR

    BITWISEAND  shift, and go to state 68
    BITWISEOR   shift, and go to state 69
    BITWISEXOR  shift, and go to state 70
    AND         shift, and go to state 71
    ASSIGN      shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 75
    EQ          shift, and go to state 76
    GE          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    LT          shift, and go to state 80
    MINUS       shift, and go to state 81
    MOD         shift, and go to state 82
    NE          shift, and go to state 83
    OR          shift, and go to state 84
    PLUS        shift, and go to state 85
    RPAR        shift, and go to state 126

    $default  reduce using rule 46 (expr)


State 125

   38 statement: IF LPAR expr RPAR statement ELSE . statement

    IF       shift, and go to state 28
    WHILE    shift, and go to state 29
    RETURN   shift, and go to state 30
    LBRACE   shift, and go to state 31
    LPAR     shift, and go to state 32
    MINUS    shift, and go to state 33
    NOT      shift, and go to state 34
    PLUS     shift, and go to state 35
    SEMI     shift, and go to state 37
    INTLIT   shift, and go to state 38
    ID       shift, and go to state 16
    CHRLIT   shift, and go to state 39
    REALLIT  shift, and go to state 40

    id_token   go to state 44
    statement  go to state 127
    expr       go to state 46


State 126

   68 expr: id_token LPAR expr COMMA expr RPAR .

    $default  reduce using rule 68 (expr)


State 127

   38 statement: IF LPAR expr RPAR statement ELSE statement .

    $default  reduce using rule 38 (statement)

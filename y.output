Grammar

    0 $accept: program $end

    1 program: functionsAndDeclarations

    2 functionsAndDeclarations: functionDefinition
    3                         | functionDeclaration
    4                         | declaration
    5                         | functionsAndDeclarations functionDefinition
    6                         | functionsAndDeclarations functionDeclaration
    7                         | functionsAndDeclarations declaration

    8 functionDefinition: typeSpec functionDeclarator functionBody

    9 functionDeclaration: typeSpec functionDeclarator SEMI

   10 typeSpec: CHAR
   11         | INT
   12         | VOID
   13         | SHORT
   14         | DOUBLE

   15 functionDeclarator: ID LPAR parameterList RPAR

   16 parameterList: parameterDeclaration
   17              | parameterList COMMA parameterDeclaration

   18 parameterDeclaration: typeSpec
   19                     | typeSpec ID

   20 functionBody: LBRACE RBRACE
   21             | LBRACE declarationsAndStatements RBRACE

   22 declarationsAndStatements: statement
   23                          | declaration
   24                          | declarationsAndStatements statement
   25                          | declarationsAndStatements declaration

   26 declaration: typeSpec declaratorsList SEMI

   27 declaratorsList: declarator
   28                | declaratorsList COMMA declarator
   29                | %empty

   30 declarator: ID
   31           | ID ASSIGN expr

   32 statementList: statement
   33              | statementList statement

   34 statement: LBRACE statementList RBRACE
   35          | LBRACE RBRACE
   36          | IF LPAR expr RPAR statement ELSE statement
   37          | IF LPAR expr RPAR statement
   38          | WHILE LPAR expr RPAR statement
   39          | RETURN expr SEMI
   40          | RETURN SEMI
   41          | expr SEMI
   42          | SEMI

   43 expr: expr ASSIGN expr
   44     | expr COMMA expr
   45     | expr PLUS expr
   46     | expr MINUS expr
   47     | expr MUL expr
   48     | expr DIV expr
   49     | expr MOD expr
   50     | expr OR expr
   51     | expr AND expr
   52     | expr BITWISEAND expr
   53     | expr BITWISEOR expr
   54     | expr BITWISEXOR expr
   55     | expr EQ expr
   56     | expr NE expr
   57     | expr LE expr
   58     | expr GE expr
   59     | expr LT expr
   60     | expr GT expr
   61     | PLUS expr
   62     | MINUS expr
   63     | NOT expr
   64     | ID LPAR RPAR
   65     | ID LPAR expr RPAR
   66     | ID LPAR expr COMMA expr RPAR
   67     | ID
   68     | INTLIT
   69     | CHRLIT
   70     | REALLIT
   71     | LPAR expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <terminal> (258) 10
    IF <terminal> (259) 36 37
    ELSE <terminal> (260) 36
    WHILE <terminal> (261) 38
    INT <terminal> (262) 11
    SHORT <terminal> (263) 13
    DOUBLE <terminal> (264) 14
    RETURN <terminal> (265) 39 40
    VOID <terminal> (266) 12
    BITWISEAND <terminal> (267) 52
    BITWISEOR <terminal> (268) 53
    BITWISEXOR <terminal> (269) 54
    AND <terminal> (270) 51
    ASSIGN <terminal> (271) 31 43
    MUL <terminal> (272) 47
    COMMA <terminal> (273) 17 28 44 66
    DIV <terminal> (274) 48
    EQ <terminal> (275) 55
    GE <terminal> (276) 58
    GT <terminal> (277) 60
    LBRACE <terminal> (278) 20 21 34 35
    LE <terminal> (279) 57
    LPAR <terminal> (280) 15 36 37 38 64 65 66 71
    LT <terminal> (281) 59
    MINUS <terminal> (282) 46 62
    MOD <terminal> (283) 49
    NE <terminal> (284) 56
    NOT <terminal> (285) 63
    OR <terminal> (286) 50
    PLUS <terminal> (287) 45 61
    RBRACE <terminal> (288) 20 21 34 35
    RPAR <terminal> (289) 15 36 37 38 64 65 66 71
    SEMI <terminal> (290) 9 26 39 40 41 42
    INTLIT <terminal> (291) 68
    ID <terminal> (292) 15 19 30 31 64 65 66 67
    CHRLIT <terminal> (293) 69
    REALLIT <terminal> (294) 70


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <nonterminal> (41)
        on left: 1
        on right: 0
    functionsAndDeclarations <nonterminal> (42)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    functionDefinition <nonterminal> (43)
        on left: 8
        on right: 2 5
    functionDeclaration <nonterminal> (44)
        on left: 9
        on right: 3 6
    typeSpec <nonterminal> (45)
        on left: 10 11 12 13 14
        on right: 8 9 18 19 26
    functionDeclarator <nonterminal> (46)
        on left: 15
        on right: 8 9
    parameterList <nonterminal> (47)
        on left: 16 17
        on right: 15 17
    parameterDeclaration <nonterminal> (48)
        on left: 18 19
        on right: 16 17
    functionBody <nonterminal> (49)
        on left: 20 21
        on right: 8
    declarationsAndStatements <nonterminal> (50)
        on left: 22 23 24 25
        on right: 21 24 25
    declaration <nonterminal> (51)
        on left: 26
        on right: 4 7 23 25
    declaratorsList <nonterminal> (52)
        on left: 27 28 29
        on right: 26 28
    declarator <nonterminal> (53)
        on left: 30 31
        on right: 27 28
    statementList <nonterminal> (54)
        on left: 32 33
        on right: 33 34
    statement <nonterminal> (55)
        on left: 34 35 36 37 38 39 40 41 42
        on right: 22 24 32 33 36 37 38
    expr <nonterminal> (56)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 31 36 37 38 39 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 65 66 71


State 0

    0 $accept: . program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    program                   go to state 6
    functionsAndDeclarations  go to state 7
    functionDefinition        go to state 8
    functionDeclaration       go to state 9
    typeSpec                  go to state 10
    declaration               go to state 11


State 1

   10 typeSpec: CHAR .

    $default  reduce using rule 10 (typeSpec)


State 2

   11 typeSpec: INT .

    $default  reduce using rule 11 (typeSpec)


State 3

   13 typeSpec: SHORT .

    $default  reduce using rule 13 (typeSpec)


State 4

   14 typeSpec: DOUBLE .

    $default  reduce using rule 14 (typeSpec)


State 5

   12 typeSpec: VOID .

    $default  reduce using rule 12 (typeSpec)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 12


State 7

    1 program: functionsAndDeclarations .
    5 functionsAndDeclarations: functionsAndDeclarations . functionDefinition
    6                         | functionsAndDeclarations . functionDeclaration
    7                         | functionsAndDeclarations . declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (program)

    functionDefinition   go to state 13
    functionDeclaration  go to state 14
    typeSpec             go to state 10
    declaration          go to state 15


State 8

    2 functionsAndDeclarations: functionDefinition .

    $default  reduce using rule 2 (functionsAndDeclarations)


State 9

    3 functionsAndDeclarations: functionDeclaration .

    $default  reduce using rule 3 (functionsAndDeclarations)


State 10

    8 functionDefinition: typeSpec . functionDeclarator functionBody
    9 functionDeclaration: typeSpec . functionDeclarator SEMI
   26 declaration: typeSpec . declaratorsList SEMI

    ID  shift, and go to state 16

    $default  reduce using rule 29 (declaratorsList)

    functionDeclarator  go to state 17
    declaratorsList     go to state 18
    declarator          go to state 19


State 11

    4 functionsAndDeclarations: declaration .

    $default  reduce using rule 4 (functionsAndDeclarations)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    5 functionsAndDeclarations: functionsAndDeclarations functionDefinition .

    $default  reduce using rule 5 (functionsAndDeclarations)


State 14

    6 functionsAndDeclarations: functionsAndDeclarations functionDeclaration .

    $default  reduce using rule 6 (functionsAndDeclarations)


State 15

    7 functionsAndDeclarations: functionsAndDeclarations declaration .

    $default  reduce using rule 7 (functionsAndDeclarations)


State 16

   15 functionDeclarator: ID . LPAR parameterList RPAR
   30 declarator: ID .
   31           | ID . ASSIGN expr

    ASSIGN  shift, and go to state 20
    LPAR    shift, and go to state 21

    $default  reduce using rule 30 (declarator)


State 17

    8 functionDefinition: typeSpec functionDeclarator . functionBody
    9 functionDeclaration: typeSpec functionDeclarator . SEMI

    LBRACE  shift, and go to state 22
    SEMI    shift, and go to state 23

    functionBody  go to state 24


State 18

   26 declaration: typeSpec declaratorsList . SEMI
   28 declaratorsList: declaratorsList . COMMA declarator

    COMMA  shift, and go to state 25
    SEMI   shift, and go to state 26


State 19

   27 declaratorsList: declarator .

    $default  reduce using rule 27 (declaratorsList)


State 20

   31 declarator: ID ASSIGN . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 35


State 21

   15 functionDeclarator: ID LPAR . parameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    typeSpec              go to state 36
    parameterList         go to state 37
    parameterDeclaration  go to state 38


State 22

   20 functionBody: LBRACE . RBRACE
   21             | LBRACE . declarationsAndStatements RBRACE

    CHAR     shift, and go to state 1
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 41
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 43
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    typeSpec                   go to state 45
    declarationsAndStatements  go to state 46
    declaration                go to state 47
    statement                  go to state 48
    expr                       go to state 49


State 23

    9 functionDeclaration: typeSpec functionDeclarator SEMI .

    $default  reduce using rule 9 (functionDeclaration)


State 24

    8 functionDefinition: typeSpec functionDeclarator functionBody .

    $default  reduce using rule 8 (functionDefinition)


State 25

   28 declaratorsList: declaratorsList COMMA . declarator

    ID  shift, and go to state 50

    declarator  go to state 51


State 26

   26 declaration: typeSpec declaratorsList SEMI .

    $default  reduce using rule 26 (declaration)


State 27

   71 expr: LPAR . expr RPAR

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 52


State 28

   62 expr: MINUS . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 53


State 29

   63 expr: NOT . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 54


State 30

   61 expr: PLUS . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 55


State 31

   68 expr: INTLIT .

    $default  reduce using rule 68 (expr)


State 32

   64 expr: ID . LPAR RPAR
   65     | ID . LPAR expr RPAR
   66     | ID . LPAR expr COMMA expr RPAR
   67     | ID .

    LPAR  shift, and go to state 56

    $default  reduce using rule 67 (expr)


State 33

   69 expr: CHRLIT .

    $default  reduce using rule 69 (expr)


State 34

   70 expr: REALLIT .

    $default  reduce using rule 70 (expr)


State 35

   31 declarator: ID ASSIGN expr .
   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 31 (declarator)


State 36

   18 parameterDeclaration: typeSpec .
   19                     | typeSpec . ID

    ID  shift, and go to state 75

    $default  reduce using rule 18 (parameterDeclaration)


State 37

   15 functionDeclarator: ID LPAR parameterList . RPAR
   17 parameterList: parameterList . COMMA parameterDeclaration

    COMMA  shift, and go to state 76
    RPAR   shift, and go to state 77


State 38

   16 parameterList: parameterDeclaration .

    $default  reduce using rule 16 (parameterList)


State 39

   36 statement: IF . LPAR expr RPAR statement ELSE statement
   37          | IF . LPAR expr RPAR statement

    LPAR  shift, and go to state 78


State 40

   38 statement: WHILE . LPAR expr RPAR statement

    LPAR  shift, and go to state 79


State 41

   39 statement: RETURN . expr SEMI
   40          | RETURN . SEMI

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 80
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 81


State 42

   34 statement: LBRACE . statementList RBRACE
   35          | LBRACE . RBRACE

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 82
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    statementList  go to state 83
    statement      go to state 84
    expr           go to state 49


State 43

   20 functionBody: LBRACE RBRACE .

    $default  reduce using rule 20 (functionBody)


State 44

   42 statement: SEMI .

    $default  reduce using rule 42 (statement)


State 45

   26 declaration: typeSpec . declaratorsList SEMI

    ID  shift, and go to state 50

    $default  reduce using rule 29 (declaratorsList)

    declaratorsList  go to state 18
    declarator       go to state 19


State 46

   21 functionBody: LBRACE declarationsAndStatements . RBRACE
   24 declarationsAndStatements: declarationsAndStatements . statement
   25                          | declarationsAndStatements . declaration

    CHAR     shift, and go to state 1
    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 41
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 85
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    typeSpec     go to state 45
    declaration  go to state 86
    statement    go to state 87
    expr         go to state 49


State 47

   23 declarationsAndStatements: declaration .

    $default  reduce using rule 23 (declarationsAndStatements)


State 48

   22 declarationsAndStatements: statement .

    $default  reduce using rule 22 (declarationsAndStatements)


State 49

   41 statement: expr . SEMI
   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    SEMI        shift, and go to state 88


State 50

   30 declarator: ID .
   31           | ID . ASSIGN expr

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 30 (declarator)


State 51

   28 declaratorsList: declaratorsList COMMA declarator .

    $default  reduce using rule 28 (declaratorsList)


State 52

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   71     | LPAR expr . RPAR

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 89


State 53

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   62     | MINUS expr .

    $default  reduce using rule 62 (expr)


State 54

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   63     | NOT expr .

    $default  reduce using rule 63 (expr)


State 55

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   61     | PLUS expr .

    $default  reduce using rule 61 (expr)


State 56

   64 expr: ID LPAR . RPAR
   65     | ID LPAR . expr RPAR
   66     | ID LPAR . expr COMMA expr RPAR

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RPAR     shift, and go to state 90
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 91


State 57

   52 expr: expr BITWISEAND . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 92


State 58

   53 expr: expr BITWISEOR . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 93


State 59

   54 expr: expr BITWISEXOR . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 94


State 60

   51 expr: expr AND . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 95


State 61

   43 expr: expr ASSIGN . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 96


State 62

   47 expr: expr MUL . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 97


State 63

   44 expr: expr COMMA . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 98


State 64

   48 expr: expr DIV . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 99


State 65

   55 expr: expr EQ . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 100


State 66

   58 expr: expr GE . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 101


State 67

   60 expr: expr GT . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 102


State 68

   57 expr: expr LE . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 103


State 69

   59 expr: expr LT . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 104


State 70

   46 expr: expr MINUS . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 105


State 71

   49 expr: expr MOD . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 106


State 72

   56 expr: expr NE . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 107


State 73

   50 expr: expr OR . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 108


State 74

   45 expr: expr PLUS . expr

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 109


State 75

   19 parameterDeclaration: typeSpec ID .

    $default  reduce using rule 19 (parameterDeclaration)


State 76

   17 parameterList: parameterList COMMA . parameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    typeSpec              go to state 36
    parameterDeclaration  go to state 110


State 77

   15 functionDeclarator: ID LPAR parameterList RPAR .

    $default  reduce using rule 15 (functionDeclarator)


State 78

   36 statement: IF LPAR . expr RPAR statement ELSE statement
   37          | IF LPAR . expr RPAR statement

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 111


State 79

   38 statement: WHILE LPAR . expr RPAR statement

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 112


State 80

   40 statement: RETURN SEMI .

    $default  reduce using rule 40 (statement)


State 81

   39 statement: RETURN expr . SEMI
   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    SEMI        shift, and go to state 113


State 82

   35 statement: LBRACE RBRACE .

    $default  reduce using rule 35 (statement)


State 83

   33 statementList: statementList . statement
   34 statement: LBRACE statementList . RBRACE

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    RBRACE   shift, and go to state 114
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    statement  go to state 115
    expr       go to state 49


State 84

   32 statementList: statement .

    $default  reduce using rule 32 (statementList)


State 85

   21 functionBody: LBRACE declarationsAndStatements RBRACE .

    $default  reduce using rule 21 (functionBody)


State 86

   25 declarationsAndStatements: declarationsAndStatements declaration .

    $default  reduce using rule 25 (declarationsAndStatements)


State 87

   24 declarationsAndStatements: declarationsAndStatements statement .

    $default  reduce using rule 24 (declarationsAndStatements)


State 88

   41 statement: expr SEMI .

    $default  reduce using rule 41 (statement)


State 89

   71 expr: LPAR expr RPAR .

    $default  reduce using rule 71 (expr)


State 90

   64 expr: ID LPAR RPAR .

    $default  reduce using rule 64 (expr)


State 91

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   65     | ID LPAR expr . RPAR
   66     | ID LPAR expr . COMMA expr RPAR

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 116
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 117


State 92

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   52     | expr BITWISEAND expr .
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 52 (expr)


State 93

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   53     | expr BITWISEOR expr .
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 53 (expr)


State 94

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   54     | expr BITWISEXOR expr .
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 54 (expr)


State 95

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   51     | expr AND expr .
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 51 (expr)


State 96

   43 expr: expr . ASSIGN expr
   43     | expr ASSIGN expr .
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 43 (expr)


State 97

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   47     | expr MUL expr .
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 47 (expr)


State 98

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   44     | expr COMMA expr .
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74

    $default  reduce using rule 44 (expr)


State 99

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   48     | expr DIV expr .
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 48 (expr)


State 100

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 55 (expr)


State 101

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   58     | expr GE expr .
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 58 (expr)


State 102

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   60     | expr GT expr .

    $default  reduce using rule 60 (expr)


State 103

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   57     | expr LE expr .
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 57 (expr)


State 104

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   59     | expr LT expr .
   60     | expr . GT expr

    $default  reduce using rule 59 (expr)


State 105

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   46     | expr MINUS expr .
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 46 (expr)


State 106

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   49     | expr MOD expr .
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 49 (expr)


State 107

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   56     | expr NE expr .
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 56 (expr)


State 108

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   50     | expr OR expr .
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 50 (expr)


State 109

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   45     | expr PLUS expr .
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    $default  reduce using rule 45 (expr)


State 110

   17 parameterList: parameterList COMMA parameterDeclaration .

    $default  reduce using rule 17 (parameterList)


State 111

   36 statement: IF LPAR expr . RPAR statement ELSE statement
   37          | IF LPAR expr . RPAR statement
   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 118


State 112

   38 statement: WHILE LPAR expr . RPAR statement
   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    COMMA       shift, and go to state 63
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 119


State 113

   39 statement: RETURN expr SEMI .

    $default  reduce using rule 39 (statement)


State 114

   34 statement: LBRACE statementList RBRACE .

    $default  reduce using rule 34 (statement)


State 115

   33 statementList: statementList statement .

    $default  reduce using rule 33 (statementList)


State 116

   44 expr: expr COMMA . expr
   66     | ID LPAR expr COMMA . expr RPAR

    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    expr  go to state 120


State 117

   65 expr: ID LPAR expr RPAR .

    $default  reduce using rule 65 (expr)


State 118

   36 statement: IF LPAR expr RPAR . statement ELSE statement
   37          | IF LPAR expr RPAR . statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    statement  go to state 121
    expr       go to state 49


State 119

   38 statement: WHILE LPAR expr RPAR . statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    statement  go to state 122
    expr       go to state 49


State 120

   43 expr: expr . ASSIGN expr
   44     | expr . COMMA expr
   44     | expr COMMA expr .
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MOD expr
   50     | expr . OR expr
   51     | expr . AND expr
   52     | expr . BITWISEAND expr
   53     | expr . BITWISEOR expr
   54     | expr . BITWISEXOR expr
   55     | expr . EQ expr
   56     | expr . NE expr
   57     | expr . LE expr
   58     | expr . GE expr
   59     | expr . LT expr
   60     | expr . GT expr
   66     | ID LPAR expr COMMA expr . RPAR

    BITWISEAND  shift, and go to state 57
    BITWISEOR   shift, and go to state 58
    BITWISEXOR  shift, and go to state 59
    AND         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    MUL         shift, and go to state 62
    DIV         shift, and go to state 64
    EQ          shift, and go to state 65
    GE          shift, and go to state 66
    GT          shift, and go to state 67
    LE          shift, and go to state 68
    LT          shift, and go to state 69
    MINUS       shift, and go to state 70
    MOD         shift, and go to state 71
    NE          shift, and go to state 72
    OR          shift, and go to state 73
    PLUS        shift, and go to state 74
    RPAR        shift, and go to state 123

    $default  reduce using rule 44 (expr)


State 121

   36 statement: IF LPAR expr RPAR statement . ELSE statement
   37          | IF LPAR expr RPAR statement .

    ELSE  shift, and go to state 124

    $default  reduce using rule 37 (statement)


State 122

   38 statement: WHILE LPAR expr RPAR statement .

    $default  reduce using rule 38 (statement)


State 123

   66 expr: ID LPAR expr COMMA expr RPAR .

    $default  reduce using rule 66 (expr)


State 124

   36 statement: IF LPAR expr RPAR statement ELSE . statement

    IF       shift, and go to state 39
    WHILE    shift, and go to state 40
    RETURN   shift, and go to state 41
    LBRACE   shift, and go to state 42
    LPAR     shift, and go to state 27
    MINUS    shift, and go to state 28
    NOT      shift, and go to state 29
    PLUS     shift, and go to state 30
    SEMI     shift, and go to state 44
    INTLIT   shift, and go to state 31
    ID       shift, and go to state 32
    CHRLIT   shift, and go to state 33
    REALLIT  shift, and go to state 34

    statement  go to state 125
    expr       go to state 49


State 125

   36 statement: IF LPAR expr RPAR statement ELSE statement .

    $default  reduce using rule 36 (statement)
